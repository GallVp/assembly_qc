includeConfig './conf/base.config'

params {
    haplotype_fasta         = [["hap1", "./test_data/test_data1.fasta"], ["hap2", "./test_data/test_data2.fasta"]]

    // Optional
    // Set to null if not needed such as: haplotype_gff3 = null
    // Not all haplotye gff3 files have to be provided such as: haplotype_gff3 = [["hap1", "./test_data/test_data1.gff3"]]
    haplotype_gff3          = [["hap1", "./test_data/test_data1.gff3"], ["hap2", "./test_data/test_data2.gff3"]]

    ncbi_fcs_adaptor {
        skip                = 0 // 1: Skip, 0: Don't

        empire              = 'euk' // euk: Eukaryote, prok: Prokaryote

        // For interpretation of results, see:
        // https://github.com/ncbi/fcs/wiki/FCS-adaptor#rules-for-action-assignment
        //
        // If adaptors are found, the pipeline stops with a report of adaptor contamination
    }
    
    busco {
        skip                = 0
        
        // BUSCO runs for each haplotype in combination with each lineage and Augustus species
        // Full cartesian product: Haplotype x Lineage x Species
        // https://busco.ezlab.org/list_of_lineages.html
        lineage_datasets    = ["fungi_odb10", "microsporidia_odb10"]
        
        // https://bioinf.uni-greifswald.de/augustus/
        augustus_species    = ["fumigatus", "nidulans"]

        // BUSCO DB download path
        download_path       = "/workspace/ComparativeDataSources/BUSCO/assembly_qc"
    }

    tidk {
        skip                = 0
        
        // http://telomerase.asu.edu/sequences_telomere.html
        // Plant: TTTAGGG, Fungus, Vertebrates: TTAGGG, Insect: TTAGG
        repeat_seq          = "TTAGGG"
    }

    lai {
        skip                = 0

        // To avoid running EDTA before LAI, provide pass_list and out_file. If these files are not available,
        // simply set these variables to null.
        // Warning: Make sure the sequence names in the haplotype_fasta, the pass_list, and the out_file match.
        // EDTA modifies the sequence names, if they are not short (<=13 characters)
        // and simple (i.e, letters, numbers, and underscore).
        //
        // Pattern:
        // pass_list        = [["hap_name", "file_path"], ["hap_name", "file_path"]]
        pass_list           = null
        out_file            = null
        
        edta {
            is_sensitive    = 0 // 1: Sensitive (very slow), 0: Not sensitive
        }
    }

    kraken2 {
        skip                = 0

        // Using PlusPFP: archaea, viral, plasmid, human, UniVec_Core, protozoa, fungi & plant
        // https://benlangmead.github.io/aws-indexes/k2
        db_url              = "https://genome-idx.s3.amazonaws.com/kraken/k2_pluspfp_20230314.tar.gz"
        download_path       = "/workspace/ComparativeDataSources/kraken2db/k2_pluspfp_20230314"
    }

    hic {
        skip                = 0
        
        reads_folder        = "/input/genomic/fungal/Neonectria/Genome/20190506_CAGRF19591_CGYCF_HiC/"
        paired_reads        = "${reads_folder}/PG_PETUNIA_HiC_CGYCF_CACTCA_L001_R{1,2}.fastq.gz"

        // Without a storage server, the report can not load hic files for presentation.
        // If a storage server is not available, set the below 'storage_server' variable to null.
        // This will store all the individual results in the hic
        // folder but will not present them in the report.
        storage_server          = "https://storage.powerplant.pfr.co.nz"
    }
    
    outdir {
        main                = "./results"
    }

    max_cpus                = 32
    is_hyperthreaded        = 0 // 1: Hyperthreading is enabled, 0: Disabled

    max_memory              = 16.GB
    
    // LAI::EDTA can take a long time
    max_time                = 3.days
}

includeConfig './conf/compiled.config'
includeConfig './conf/module_defaults.config'
