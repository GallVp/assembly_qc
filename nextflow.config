includeConfig './conf/base.config'

params {
    
    // Pattern:               [["tag": "file path"]]
    // Examples:
    // genome_fasta         = [["hap1", "./a/relative/path/to/the/fasta/file.fasta"], ["hap2", "./a/relative/path/to/the/fasta/file2.fasta"], ...]
    // genome_fasta         = [["red5", "/an/absolute/path/to/the/fasta/file.fasta"]]
    genome_fasta            = [["hap1", "./test_data/test_data1.fasta"], ["hap2", "./test_data/test_data2.fasta"]]

    // Optional
    // Set to null if not needed such as: genome_gff3 = null
    // Not all genome gff3 files have to be provided such as: genome_gff3 = [["hap1", "./test_data/test_data1.gff3"]]
    genome_gff3             = [["hap1", "./test_data/test_data1.gff3"], ["hap2", "./test_data/test_data2.gff3"]]

    ncbi_fcs_adaptor {
        skip                = 1 // 1: Skip, 0: Don't

        empire              = 'euk' // euk: Eukaryote, prok: Prokaryote

        // For interpretation of results, see:
        // https://github.com/ncbi/fcs/wiki/FCS-adaptor#rules-for-action-assignment
        //
        // If adaptors are found, the pipeline stops with a report of adaptor contamination
    }
    
    busco {
        skip                = 1
        
        // BUSCO runs for each genome in combination with each lineage and Augustus species
        // Full cartesian product: Genome x Lineage x Species
        // https://busco.ezlab.org/list_of_lineages.html
        lineage_datasets    = ["fungi_odb10", "microsporidia_odb10"]
        
        // https://bioinf.uni-greifswald.de/augustus/
        augustus_species    = ["fumigatus", "nidulans"]

        // BUSCO DB download path
        // The pipeline automatically downloads the required DB if needed
        download_path       = "/workspace/ComparativeDataSources/BUSCO/assembly_qc"
    }

    tidk {
        skip                = 1
        
        // http://telomerase.asu.edu/sequences_telomere.html
        // Plant: TTTAGGG, Fungus, Vertebrates: TTAGGG, Insect: TTAGG
        repeat_seq          = "TTAGGG"
    }

    lai {
        skip                = 1

        // To avoid running EDTA before LAI, provide pass_list and out_file. If these files are not available,
        // simply set these variables to null.
        // Warning: Make sure the sequence names in the genome_fasta, the pass_list, and the out_file match.
        // EDTA modifies the sequence names, if they are not short (<=13 characters)
        // and simple (i.e, letters, numbers, and underscore).
        //
        // Pattern:
        // pass_list        = [["hap_name", "file_path"], ["hap_name", "file_path"]]
        pass_list           = null
        out_file            = null
        
        edta {
            is_sensitive    = 0 // 1: Sensitive (very slow), 0: Not sensitive
        }
    }

    kraken2 {
        skip                = 1

        // Using PlusPFP: archaea, viral, plasmid, human, UniVec_Core, protozoa, fungi & plant
        // https://benlangmead.github.io/aws-indexes/k2
        // The pipeline automatically downloads the required DB if needed
        db_url              = "https://genome-idx.s3.amazonaws.com/kraken/k2_pluspfp_20230314.tar.gz"
        download_path       = "/workspace/ComparativeDataSources/kraken2db/k2_pluspfp_20230314"
    }

    ncbi_fcs_gx {
        skip                = 0

        // NCBI FCS GX DB path
        // Due to enormity of the DB size, the pipeline does NOT download the data.
        // It must be setup by the user manually before running the pipeline.
        // See instructions for DB setup: https://github.com/ncbi/fcs/wiki/FCS-GX
        // db_manifest_url must match the available DB otherwise the pipeline won't be able to
        // verify the integrity of the DB.
        db_manifest_url     = "https://ftp.ncbi.nlm.nih.gov/genomes/TOOLS/FCS/database/test-only/test-only.manifest"
        db_path             = "/workspace/ComparativeDataSources/NCBI/FCS/GX/test-only"

        // Get tax ID from https://www.ncbi.nlm.nih.gov/taxonomy
        // Example genome is from Neonectria ditissima
        tax_id              = "78410"

        // For interpretation of results, see:
        // https://github.com/ncbi/fcs/wiki/FCS-GX#fcs-gx-report-output
    }

    hic {
        skip                = 1
        
        reads_folder        = "/input/genomic/fungal/Neonectria/Genome/20190506_CAGRF19591_CGYCF_HiC/"
        paired_reads        = "${reads_folder}/PG_PETUNIA_HiC_CGYCF_CACTCA_L001_R{1,2}.fastq.gz"

        // Without a storage server, the report can not load hic files for presentation.
        // If a storage server is not available, set the below 'storage_server' variable to null.
        // This will store all the individual results in the hic
        // folder but will not present them in the report.
        storage_server      = "https://storage.powerplant.pfr.co.nz"
    }
    
    outdir {
        main                = "./results"
    }
}

includeConfig './conf/max_resources.config'
includeConfig './conf/compiled.config'
includeConfig './conf/module_defaults.config'
