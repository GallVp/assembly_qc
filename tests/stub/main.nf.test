nextflow_pipeline {

    name "Test the entire pipeline in stub mode"
    script "main.nf"

    test("full - stub") {
        options '-stub'

        when {
            params {
                input                   = "$baseDir/assets/assemblysheetv2.csv"
                gfastats_skip           = false
                ncbi_fcs_adaptor_skip   = false
                ncbi_fcs_adaptor_empire = "euk"
                ncbi_fcs_gx_skip        = false
                ncbi_fcs_gx_tax_id      = 12
                ncbi_fcs_gx_db_path     = "$baseDir/tests/stub/gxdb/test"
                busco_skip              = false
                busco_mode              = "genome"
                busco_lineage_datasets  = "fungi_odb10 hypocreales_odb10"
                tidk_skip               = false
                tidk_repeat_seq         = "TTTGGG"
                lai_skip                = false
                kraken2_skip            = false
                kraken2_db_path         = "$baseDir/tests/stub/kraken2/k2_minusb_20231009.tar.gz"
                hic                     = "$baseDir/tests/stub/hic/Dummy_hic.R{1,2}.fq.gz"
                hic_skip_fastp          = true
                hic_skip_fastqc         = false
                synteny_skip            = false
                synteny_mummer_skip     = false
                synteny_plotsr_skip     = false
                synteny_xref_assemblies = "$baseDir/assets/xrefsheet.csv"
                merqury_skip            = false
                outdir                  = "$outputDir"
            }
        }

        then {
            def stable_path = getAllFilesFromDir(params.outdir, false, ['pipeline_info/*.{html,json,txt,yml}', 'report.{html,json}'], null, ['**'])

            assertAll(
                { assert workflow.success},
                { assert snapshot(
                    [
                        'successful tasks': workflow.trace.succeeded().size(),
                        'versions': removeNextflowVersion("$outputDir/pipeline_info/software_versions.yml"),
                        'stable paths': stable_path
                    ]
                ).match() }
            )
        }

    }

}
